}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,1,
1,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(2,4,
4,8),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
2,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,2,
2,4),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
a <- mean(c(1,2,3))
library(httr)
library(readr)
library(dplyr)
setwd("~/Documents/Projects/BikeShare/")
source("R/config.R")
source("R/helpers.R")
paths <- getFilePaths()
stations <- rbind(read_csv(paths$station[2]),
read_csv(paths$station[3]))
stations <- stations %>%
select(station_id, lat, long, landmark) %>%
group_by(station_id, lat, long, landmark) %>%
filter(row_number() == 1) %>%
ungroup()
gmaps.dist.matrix.url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=Washington,DC&destinations=New+York+City,NY&key=", API_KEY)
resp <- GET(url = gmaps.dist.matrix.url)
resp
content(resp, as = "text")
content(resp)
5/7
n=19
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
MAX_STATIONS_PER_CALL <- 20
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
n_calls
n = 27
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
n_calls
n=40
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
n_calls
n=41
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
n_calls
stations
stations <- stations %>%
select(station_id, lat, long, landmark) %>%
group_by(station_id, lat, long, landmark) %>%
filter(row_number() == 1) %>%
ungroup() %>%
mutate(latlong = paste(lat, long, sep = ","))
stations
stations
getBikingTimes <- function(stations) {
n <- nrow(stations)
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
return n_calls
}
getBikingTimes <- function(stations) {
n <- nrow(stations)
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
return n_calls
getBikingTimes <- function(stations) {
n <- nrow(stations)
n_calls <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
return(n_calls)
}
sapply(unique(stations$landmark), function(st) {
getBikingTimes(filter(stations, landmark == st))
})
?combn
combn(c(1,2,3))
combn(c(1,2,3), 2)
1:10
a=1:10
a
a[1:20]
a[1:]
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
origins <- paste(stations$latlong[(i-1)*MAX_STATIONS_PER_CALL:i*MAX_STATIONS_PER_CALL], sep = "|")
destinations <- paste(stations$latlong[(j-1)*MAX_STATIONS_PER_CALL:j*MAX_STATIONS_PER_CALL], sep = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", origins,
"&", destinations, "destinations=New+York+City,NY&key=", API_KEY)
urls <- c(urls, url)
}
}
return urls
}
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
origins <- paste(stations$latlong[(i-1)*MAX_STATIONS_PER_CALL:i*MAX_STATIONS_PER_CALL], sep = "|")
destinations <- paste(stations$latlong[(j-1)*MAX_STATIONS_PER_CALL:j*MAX_STATIONS_PER_CALL], sep = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", origins,
"&", destinations, "destinations=New+York+City,NY&key=", API_KEY)
urls <- c(urls, url)
}
}
return(urls)
}
sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
i=1
origins <- stations$latlong[(i-1)*MAX_STATIONS_PER_CALL:i*MAX_STATIONS_PER_CALL]
origins
stations$latlong
i=1
j=1
origins <- stations$latlong[(i-1)*MAX_STATIONS_PER_CALL:i*MAX_STATIONS_PER_CALL]
origins
origins <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):i*MAX_STATIONS_PER_CALL]
origins
i
stations$latlong
stations$latlong[1:20]
origins <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):i*MAX_STATIONS_PER_CALL]
origins
origins <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
origins
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
url1 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url2 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s2,
"&destinations=", s1, "&key=", API_KEY)
urls <- c(urls, url)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
url.list
c(c(1,2), 3)
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
url1 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url2 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s2,
"&destinations=", s1, "&key=", API_KEY)
urls <- c(urls, url1, url2)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
s1 <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s1
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- paste(stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)], sep = "|")
s2 <- paste(stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)], sep = "|")
url1 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url2 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s2,
"&destinations=", s1, "&key=", API_KEY)
urls <- c(urls, url1, url2)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
s1 <- paste(stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)], sep = "|")
s1
?paste
s1 <- paste(stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)], collapse = "|")
s1
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- paste(stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)], collapse = "|")
s2 <- paste(stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)], collapse = "|")
url1 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url2 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s2,
"&destinations=", s1, "&key=", API_KEY)
urls <- c(urls, url1, url2)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
s1
s2 <- paste(stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)], collapse = "|")
s2
urls
s1
stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url1 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url2 <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s2,
"&destinations=", s1, "&key=", API_KEY)
urls <- c(urls, url1, url2)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
getRequestURLs <- function(stations) {
n <- nrow(stations)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- stations$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- stations$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
stations
getRequestURLs <- function(st) {
n <- nrow(st)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
filter(stations, landmark == st)
st = "San Francisco"
filter(stations, landmark == st)
st=filter(stations, landmark == st)
st
n <- nrow(st)
n
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
n_groups
urls <- c()
for (i in n_groups){
for (j in n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
urls
for (i in n_groups){
for (j in n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
print(url)
}
}
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
url
for (i in n_groups)
{print(i)}
for (i in 1:n_groups){
for (j in 1:n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
urls
for (i in 1:n_groups){
for (j in 1:n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
print("YES")
}
}
urls <- c()
for (i in 1:n_groups){
for (j in 1:n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
urls
getRequestURLs <- function(st) {
n <- nrow(st)
n_groups <- floor((n - 1)/MAX_STATIONS_PER_CALL) + 1
urls <- c()
for (i in 1:n_groups){
for (j in 1:n_groups) {
s1 <- st$latlong[((i-1)*MAX_STATIONS_PER_CALL + 1):(i*MAX_STATIONS_PER_CALL)]
s2 <- st$latlong[((j-1)*MAX_STATIONS_PER_CALL + 1):(j*MAX_STATIONS_PER_CALL)]
s1 <- paste(s1[!is.na(s1)], collapse = "|")
s2 <- paste(s2[!is.na(s2)], collapse = "|")
url <- paste0("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=", s1,
"&destinations=", s2, "&key=", API_KEY)
urls <- c(urls, url)
}
}
return(urls)
}
url.list <- sapply(unique(stations$landmark), function(st) {
getRequestURLs(filter(stations, landmark == st))
})
url.list
url.list
names(url.list)
url.list$`San Jose`
resp <- GET(url = url.list$`San Jose`)
content(resp)
url.list$`San Jose`
getRequestURLs(stations[1:5,])
a=getRequestURLs(stations[1:5,])
a=
""
a=getRequestURLs(stations[1:5,])
a
resp = GET(url = a)
resp
content(r)
content(resp)
resp
content(res)
content(resp)
a=content(resp)
a$rows
b=a$rows
names(a$rows)
