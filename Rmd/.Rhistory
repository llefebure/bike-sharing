sqrt(x[33]) - sqrt(y[33])
x[33] - y[33]
plot(x, sqrt(x))
abs(sqrt(x) - sqrt(y))
abs(sqrt(x) - sqrt(y)) < abs(x-y)
x[65]
y[65]
abs(sqrt(x[65]) - sqrt(y[65]))
abs(x - y)
abs(sqrt(x[65]) - sqrt(y[65]))
abs(x[65] - y[65])
x
abs(x**1.1 - y**1.1 < abs(x-y)
abs(x**1.1 - y**1.1 < abs(x-y))
abs(x**1.1 - y**1.1) < abs(x-y)
library(gbm)
?gbm
?gbm
?filled.contour
example(filled.contour)
volcano
head(volcano)
Sigma <- matrix(c(1,0,0,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,0,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
f(1,1)
f(1,2)
f(1,10)
f(1,1000)
f(x=1,y=1000)
combn(x, y)
?combn
z <- matrix(0, nrow = length(x))
z
head(z)
Sigma <- matrix(c(1,0,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = 0, to = 2, by = .01)
y <- seq(from = 0, to = 2, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = 0, to = 5, by = .01)
y <- seq(from = 0, to = 5, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
x <- seq(from = 0, to = 5, by = .01)
y <- seq(from = 0, to = 5, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,0,4,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .01)
y <- seq(from = -1, to = 1, by = .01)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2)
Sigma
Sigma <- matrix(c(1,4,0,1), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,2,1), nrow = 2)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,0,1), nrow = 2, byrow = T)
Sigma
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[i])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,0,1), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,4,0,0), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,4,0), nrow = 2, byrow = T)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,1,
1,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(2,4,
4,8),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
0,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,0,
2,0),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
Sigma <- matrix(c(1,2,
2,4),
nrow = 2, byrow = F)
f <- function(x, y){
exp(-.5*(Sigma[1,1]*x**2 + (Sigma[1,2] + Sigma[2,1])*x*y + Sigma[2,2]*y**2))
}
x <- seq(from = -1, to = 1, by = .1)
y <- seq(from = -1, to = 1, by = .1)
z <- matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:nrow(z)){
for (j in 1:ncol(z)){
z[i,j] <- f(x[i], y[j])
}
}
filled.contour(x, y, z)
a <- mean(c(1,2,3))
setwd("~/Documents/Projects/BikeShare/Rmd")
library(dplyr)
library(readr)
library(ggplot2)
source("../misc/config.R")
source("../misc/helpers.R")
status_data <- read_csv(paste0(DATA_DIR, STATUS_DATA))
status_data <- addDateFeatures(status_data)
agg <- status_data %>%
group_by(station_id, hm, weekday) %>%
summarize(avg_bikes_available = mean(bikes_available),
sd_bikes_available = sd(bikes_available))
ggplot(filter(agg, station_id == 60), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
station_data <- read_csv(paste0(DATA_DIR, STATION_DATA))
station_data
status_data
?left_join
station_data
status_data
status_data <- inner_join(status_data, station_data)
status_data
unique(status_data$names)
unique(status_data$name)
station_data
ggplot(filter(agg, station_id == 4), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
agg
filter(station_data, station_id == 2)
filter(agg, station_id == 2)
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
geom_line() +
';'
filter(agg, station_id == 2)
filter(agg, station_id == 2)[500,]
filter(agg, station_id == 2)[1500,]
filter(agg, station_id == 2)[1500:1510,]
filter(agg, station_id == 2)[2500:2510,]
ggplot(filter(agg, station_id == 2, weekday == 1), aes(y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
ggplot(filter(agg, station_id == 2, weekday == 1), aes(y = avg_bikes_available))
#group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
test = filter(agg, station_id == 2, weekday == 1)
test
plot(test$avg_bikes_available)
plot(test$avg_bikes_available, type = "l")
test[400,]
agg[800]
agg[800,]
test[460,]
test[480,]
test[600,]
?scale_x_datetime
agg
agg$hm
ggplot(filter(agg, station_id == 2, weekday == 1), aes(y = avg_bikes_available))
#group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2, weekday == 1), aes(x = hm, y = avg_bikes_available),
group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2, weekday == 1), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2, weekday == 1), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2, weekday == 1), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
agg
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
agg
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line()# +
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M"))
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = "%H:%M")
?scale_x_datetime
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M")
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(date_labels = "%H:%M", tz = "PDT")
?date_format
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los Angeles")
)
library(scales)
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los Angeles"))
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/LosAngeles"))
?date_format
ggplot(filter(agg, station_id == 2), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
station_data
station_data[20:30,]
ggplot(filter(agg, station_id == 29), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
ggplot(filter(agg, station_id == 34), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
station_data
station_data[1:100]
station_data[1:100,]
station_data[20:100,]
ggplot(filter(agg, station_id == 28), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
ggplot(filter(agg, station_id == 28), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
ggplot(filter(agg, station_id == 34), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
cos.sim(x, y){
sum(x*y)/(sqrt(sum(x**2))*sqrt(sum(y**2)))
}
cos.sim(x, y){
sum(x*y)/(sqrt(sum(x**2))*sqrt(sum(y**2)))
}
cos.sim = function(x, y){
sum(x*y)/(sqrt(sum(x**2))*sqrt(sum(y**2)))
}
station_data[100]
station_data[100,]
station_data[50:100,]
ggplot(filter(agg, station_id == 70), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
pa<-filter(agg, station_id == 34)
pa<-filter(agg, station_id == 34, weekday == 1)
sf<-filter(agg, station_id == 70, weekday == 1)
cos.sim(pa,sf)
cos.sim(pa$avg_bikes_available,sf$avg_bikes_available)
station_data[60:100]
station_data[60:100,]
ggplot(filter(agg, station_id == 77), aes(x = hm, y = avg_bikes_available,
group = weekday, color = weekday)) +
geom_line() +
scale_x_datetime(labels = date_format("%H:%M", tz = "America/Los_Angeles"))
sans<-filter(agg, station_id == 77, weekday == 1)
cos.sim(sans, sf)
cos.sim(sans$avg_bikes_available, sf$avg_bikes_available)
cos.sim(sans$avg_bikes_available, pa$avg_bikes_available)
